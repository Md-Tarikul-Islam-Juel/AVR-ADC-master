
ATmega16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000058  00000000  00000000  0000022a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000252  00000000  00000000  00000282  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000016f  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000020e  00000000  00000000  00000643  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000080  00000000  00000000  00000854  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000001ef  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001d7  00000000  00000000  00000ac3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000038  00000000  00000000  00000c9a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  54:	a8 00       	.word	0x00a8	; ????
  56:	ac 00       	.word	0x00ac	; ????
  58:	ae 00       	.word	0x00ae	; ????
  5a:	b0 00       	.word	0x00b0	; ????
  5c:	b4 00       	.word	0x00b4	; ????
  5e:	b6 00       	.word	0x00b6	; ????
  60:	ba 00       	.word	0x00ba	; ????
  62:	be 00       	.word	0x00be	; ????

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf e5       	ldi	r28, 0x5F	; 95
  6a:	d4 e0       	ldi	r29, 0x04	; 4
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 d1 00 	jmp	0x1a2	; 0x1a2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:


int main(void)
{
	uint16_t DATA;
	DDRD |=(1<<PD0);//pin PD0 set as OUTPUT 
  7c:	88 9a       	sbi	0x11, 0	; 17

	ADC_INIT(128,AVCC);
  7e:	61 e0       	ldi	r22, 0x01	; 1
  80:	80 e8       	ldi	r24, 0x80	; 128
  82:	0e 94 91 00 	call	0x122	; 0x122 <ADC_INIT>
	

	while(1)

	{	DATA = ADC_READ(0);//pin ADC0 set as INPUT
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	0e 94 9c 00 	call	0x138	; 0x138 <ADC_READ>


		if (DATA>=512)
  8c:	81 15       	cp	r24, r1
  8e:	92 40       	sbci	r25, 0x02	; 2
  90:	10 f0       	brcs	.+4      	; 0x96 <main+0x1a>
		{
			PORTD |=(1<<PD0);
  92:	90 9a       	sbi	0x12, 0	; 18
  94:	f8 cf       	rjmp	.-16     	; 0x86 <main+0xa>
		}
		else
		{
			PORTD &= ~(1<<PD0);
  96:	90 98       	cbi	0x12, 0	; 18
  98:	f6 cf       	rjmp	.-20     	; 0x86 <main+0xa>

0000009a <ADC_PRESCALER_SET>:
  9a:	96 b1       	in	r25, 0x06	; 6
  9c:	98 7f       	andi	r25, 0xF8	; 248
  9e:	96 b9       	out	0x06, r25	; 6
  a0:	80 31       	cpi	r24, 0x10	; 16
  a2:	b9 f0       	breq	.+46     	; 0xd2 <ADC_PRESCALER_SET+0x38>
  a4:	38 f4       	brcc	.+14     	; 0xb4 <ADC_PRESCALER_SET+0x1a>
  a6:	84 30       	cpi	r24, 0x04	; 4
  a8:	71 f0       	breq	.+28     	; 0xc6 <ADC_PRESCALER_SET+0x2c>
  aa:	88 30       	cpi	r24, 0x08	; 8
  ac:	71 f0       	breq	.+28     	; 0xca <ADC_PRESCALER_SET+0x30>
  ae:	82 30       	cpi	r24, 0x02	; 2
  b0:	f1 f4       	brne	.+60     	; 0xee <ADC_PRESCALER_SET+0x54>
  b2:	07 c0       	rjmp	.+14     	; 0xc2 <ADC_PRESCALER_SET+0x28>
  b4:	80 34       	cpi	r24, 0x40	; 64
  b6:	99 f0       	breq	.+38     	; 0xde <ADC_PRESCALER_SET+0x44>
  b8:	80 38       	cpi	r24, 0x80	; 128
  ba:	a9 f0       	breq	.+42     	; 0xe6 <ADC_PRESCALER_SET+0x4c>
  bc:	80 32       	cpi	r24, 0x20	; 32
  be:	b9 f4       	brne	.+46     	; 0xee <ADC_PRESCALER_SET+0x54>
  c0:	0a c0       	rjmp	.+20     	; 0xd6 <ADC_PRESCALER_SET+0x3c>
  c2:	30 9a       	sbi	0x06, 0	; 6
  c4:	08 95       	ret
  c6:	31 9a       	sbi	0x06, 1	; 6
  c8:	08 95       	ret
  ca:	86 b1       	in	r24, 0x06	; 6
  cc:	83 60       	ori	r24, 0x03	; 3
  ce:	86 b9       	out	0x06, r24	; 6
  d0:	08 95       	ret
  d2:	32 9a       	sbi	0x06, 2	; 6
  d4:	08 95       	ret
  d6:	86 b1       	in	r24, 0x06	; 6
  d8:	85 60       	ori	r24, 0x05	; 5
  da:	86 b9       	out	0x06, r24	; 6
  dc:	08 95       	ret
  de:	86 b1       	in	r24, 0x06	; 6
  e0:	86 60       	ori	r24, 0x06	; 6
  e2:	86 b9       	out	0x06, r24	; 6
  e4:	08 95       	ret
  e6:	86 b1       	in	r24, 0x06	; 6
  e8:	87 60       	ori	r24, 0x07	; 7
  ea:	86 b9       	out	0x06, r24	; 6
  ec:	08 95       	ret
  ee:	86 b1       	in	r24, 0x06	; 6
  f0:	88 7f       	andi	r24, 0xF8	; 248
  f2:	86 b9       	out	0x06, r24	; 6
  f4:	08 95       	ret

000000f6 <ADC_voltage_Reference>:
  f6:	97 b1       	in	r25, 0x07	; 7
  f8:	9f 73       	andi	r25, 0x3F	; 63
  fa:	97 b9       	out	0x07, r25	; 7
  fc:	3e 9a       	sbi	0x07, 6	; 7
  fe:	81 11       	cpse	r24, r1
 100:	04 c0       	rjmp	.+8      	; 0x10a <ADC_voltage_Reference+0x14>
 102:	87 b1       	in	r24, 0x07	; 7
 104:	8f 73       	andi	r24, 0x3F	; 63
 106:	87 b9       	out	0x07, r24	; 7
 108:	08 95       	ret
 10a:	81 30       	cpi	r24, 0x01	; 1
 10c:	11 f4       	brne	.+4      	; 0x112 <ADC_voltage_Reference+0x1c>
 10e:	3e 9a       	sbi	0x07, 6	; 7
 110:	08 95       	ret
 112:	83 30       	cpi	r24, 0x03	; 3
 114:	21 f4       	brne	.+8      	; 0x11e <ADC_voltage_Reference+0x28>
 116:	87 b1       	in	r24, 0x07	; 7
 118:	80 6c       	ori	r24, 0xC0	; 192
 11a:	87 b9       	out	0x07, r24	; 7
 11c:	08 95       	ret
 11e:	3e 9a       	sbi	0x07, 6	; 7
 120:	08 95       	ret

00000122 <ADC_INIT>:
 122:	cf 93       	push	r28
 124:	c6 2f       	mov	r28, r22
 126:	37 9a       	sbi	0x06, 7	; 6
 128:	0e 94 4d 00 	call	0x9a	; 0x9a <ADC_PRESCALER_SET>
 12c:	8c 2f       	mov	r24, r28
 12e:	0e 94 7b 00 	call	0xf6	; 0xf6 <ADC_voltage_Reference>
 132:	3d 98       	cbi	0x07, 5	; 7
 134:	cf 91       	pop	r28
 136:	08 95       	ret

00000138 <ADC_READ>:
 138:	97 b1       	in	r25, 0x07	; 7
 13a:	90 7e       	andi	r25, 0xE0	; 224
 13c:	97 b9       	out	0x07, r25	; 7
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	88 30       	cpi	r24, 0x08	; 8
 142:	91 05       	cpc	r25, r1
 144:	f8 f4       	brcc	.+62     	; 0x184 <ADC_READ+0x4c>
 146:	fc 01       	movw	r30, r24
 148:	e6 5d       	subi	r30, 0xD6	; 214
 14a:	ff 4f       	sbci	r31, 0xFF	; 255
 14c:	0c 94 cb 00 	jmp	0x196	; 0x196 <__tablejump2__>
 150:	87 b1       	in	r24, 0x07	; 7
 152:	80 7e       	andi	r24, 0xE0	; 224
 154:	87 b9       	out	0x07, r24	; 7
 156:	19 c0       	rjmp	.+50     	; 0x18a <ADC_READ+0x52>
 158:	38 9a       	sbi	0x07, 0	; 7
 15a:	17 c0       	rjmp	.+46     	; 0x18a <ADC_READ+0x52>
 15c:	39 9a       	sbi	0x07, 1	; 7
 15e:	15 c0       	rjmp	.+42     	; 0x18a <ADC_READ+0x52>
 160:	87 b1       	in	r24, 0x07	; 7
 162:	83 60       	ori	r24, 0x03	; 3
 164:	87 b9       	out	0x07, r24	; 7
 166:	11 c0       	rjmp	.+34     	; 0x18a <ADC_READ+0x52>
 168:	3a 9a       	sbi	0x07, 2	; 7
 16a:	0f c0       	rjmp	.+30     	; 0x18a <ADC_READ+0x52>
 16c:	87 b1       	in	r24, 0x07	; 7
 16e:	85 60       	ori	r24, 0x05	; 5
 170:	87 b9       	out	0x07, r24	; 7
 172:	0b c0       	rjmp	.+22     	; 0x18a <ADC_READ+0x52>
 174:	87 b1       	in	r24, 0x07	; 7
 176:	86 60       	ori	r24, 0x06	; 6
 178:	87 b9       	out	0x07, r24	; 7
 17a:	07 c0       	rjmp	.+14     	; 0x18a <ADC_READ+0x52>
 17c:	87 b1       	in	r24, 0x07	; 7
 17e:	87 60       	ori	r24, 0x07	; 7
 180:	87 b9       	out	0x07, r24	; 7
 182:	03 c0       	rjmp	.+6      	; 0x18a <ADC_READ+0x52>
 184:	87 b1       	in	r24, 0x07	; 7
 186:	80 7e       	andi	r24, 0xE0	; 224
 188:	87 b9       	out	0x07, r24	; 7
 18a:	36 9a       	sbi	0x06, 6	; 6
 18c:	34 9b       	sbis	0x06, 4	; 6
 18e:	fe cf       	rjmp	.-4      	; 0x18c <ADC_READ+0x54>
 190:	84 b1       	in	r24, 0x04	; 4
 192:	95 b1       	in	r25, 0x05	; 5
 194:	08 95       	ret

00000196 <__tablejump2__>:
 196:	ee 0f       	add	r30, r30
 198:	ff 1f       	adc	r31, r31

0000019a <__tablejump__>:
 19a:	05 90       	lpm	r0, Z+
 19c:	f4 91       	lpm	r31, Z
 19e:	e0 2d       	mov	r30, r0
 1a0:	09 94       	ijmp

000001a2 <_exit>:
 1a2:	f8 94       	cli

000001a4 <__stop_program>:
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <__stop_program>
